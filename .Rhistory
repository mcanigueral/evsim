) %>%
fill(-datetime, .direction = 'down') %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
set.seed(1234)
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
today(),
resolution = 30
) %>%
mutate(Profile = 'Demand')
sessions %>%
select(-c(Profile)) %>%
mutate_if(is.timepoint, format, "%d/%m/%Y %H:%M") %>%
knitr::kable()
demand_5 <- sessions %>%
get_demand(resolution = 5)
demand_15 <- sessions %>%
get_demand(resolution = 15)
demand_30 <- sessions %>%
get_demand(resolution = 30)
demand_5 %>%
rename(`5-minute resolution` = Demand) %>%
left_join(
rename(demand_15, `15-minute resolution` = Demand)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = Demand)
) %>%
fill(-datetime, .direction = 'down') %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
sum(demand_5$Demand*5/60)
sum(demand_15$Demand*15/60)
sum(demand_30$Demand*30/60)
sum(demand_5$Demand*5/60) # in kWh
sum(demand_15$Demand*15/60) # in kWh
sum(demand_30$Demand*30/60) # in kWh
pkgdown::build_site()
library(dplyr)
install.packages('roxygen2')
install.packages(c('shiny', 'shinydashboard', 'shinyWidgets'))
install.packages('pdflatex')
install.packages('devtools')
install.packages('pkgdown')
install.packages('pkgdown')
install.packages('pkgdown')
install.packages('pkgdown')
install.packages('devtools')
library(evsim)
library(evsim)
1
gc()
library(evsim)
library(evsim)
!is.numeric(NA)
library(evsim)
is.numeric(NA)
!is.numeric(NA)
!is.numeric(NULL)
library(evsim)
library(evsim)
sample(c(11), 4, prob = 1, replace = T)
dplyr::sample_frac(c(11), size = 4, weight = 1, replace = T)
dplyr::sample_frac(tibble(power = c(11)), size = 4, weight = 1, replace = T)
library(dplyr)
dplyr::sample_frac(tibble(power = c(11)), size = 4, weight = 1, replace = T)
library(evsim)
library(evsim)
sample_n(c(1, 2, 3), size = 1)
samplec(1, 2, 3), size = 1)
sample(c(1, 2, 3), size = 1)
sample(c(), size = 1)
library(evsim)
library(evsim)
library(evsim)
library(evsim)
library(evsim)
library(evsim)
library(evsim)
install.packages(c('shinydashboard', 'shinyWidgets'))
library(evsim)
library(evsim)
pkgdown::build_favicons()
pkgdown::build_favicons()
pkgdown::build_favicons()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_version()
usethis::use_news_md()
pkgdown::build_site()
pkgdown::preview_page('news/index.html')
devtools::spell_check()
usethis::use_github_action_check_standard()
pkgdown::build_article("time_resolution")
devtools::check_rhub()
load("~/Resourcefully Dropbox/Marc Canigueral/PROJECTS/R PACKAGES/evsim/R/sysdata.rda")
load("~/Resourcefully Dropbox/Marc Canigueral/PROJECTS/R PACKAGES/evsim/R/sysdata.rda")
library(evsim)
ev_model
ev_model <- readRDS("evmodel.RDS")
ev_model
pkgdown::preview_site()
data(evmodel)
data("mtcars")
mtcars
evsim:::ev_model
california_ev_model <- readRDS("california_evmodel.RDS")
usethis::use_data(california_ev_model)
source("~/Resourcefully Dropbox/Marc Canigueral/PROJECTS/R PACKAGES/evsim/R/data.R", echo=TRUE)
usethis::use_roxygen_md()
library(evsim)
knitr::opts_chunk$set(echo = TRUE)
library(evsim)
california_ev_model
evsim::california_ev_model
ev_model <- evsim::california_ev_model
print(ev_model)
workday_models <- ev_model$models$user_profiles[[1]]
workday_models
new_ratios <- tibble(
time_cycle = rep('Workday', 7),
profile = workday_models$profile,
ratio = c(0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.1)
)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(evsim)
library(dplyr)
new_ratios <- tibble(
time_cycle = rep('Workday', 7),
profile = workday_models$profile,
ratio = c(0, 0.1, 0.1, 0.2, 0.2, 0.3, 0.1)
)
workday_models$profile
new_ratios <- tibble(
time_cycle = rep('Workday', 2),
profile = workday_models$profile,
ratio = c(0,2, 0.8)
)
new_ratios <- tibble(
time_cycle = rep('Workday', 2),
profile = workday_models$profile,
ratio = c(0.2, 0.8)
)
new_ratios
ev_model <- update_profiles_ratios(ev_model, new_ratios)
ev_model$models$user_profiles[[1]]
ev_model <- evsim::california_ev_model
new_ev_model <- update_profiles_ratios(ev_model, new_ratios)
ev_model$models$user_profiles[[1]]
new_ev_model$models$user_profiles[[1]]
sessions_day <- tibble(
time_cycle = ev_model$models$time_cycle,
n_sessions = c(250, 275, 200, 200)
)
sessions_day
ev_model$models$time_cycle
sessions_day <- tibble(
time_cycle = ev_model$models$time_cycle,
n_sessions = c(250, 50)
)
sessions_day
charging_powers <- tibble(
power = c(3.7, 7.3, 11),
ratio = c(0.2, 0.4, 0.4)
)
charging_powers
dates_sim <- seq.Date(from = as.Date('2019-09-10'), to = as.Date('2019-09-15'), by = '1 day')
dates_sim
sessions_estimated <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
dates_sim,
resolution = 15
)
sessions_estimated <- simulate_sessions(
new_ev_model,
sessions_day,
charging_powers,
dates_sim,
resolution = 15
)
head(sessions_estimated)
dttm_seq <- seq.POSIXt(
from = as.POSIXct('2019-09-10'),
to = as.POSIXct('2019-09-16'),
by = '15 min'
) %>%
lubridate::with_tz('Europe/Amsterdam')
dttm_seq <- seq.POSIXt(
from = as.POSIXct('2019-09-10'),
to = as.POSIXct('2019-09-16'),
by = '15 min'
) %>%
lubridate::with_tz(
new_ev_model$metadata$tzone
)
dttm_seq
estimated_demand <- sessions_estimated %>%
get_demand(dttm_seq)
estimated_demand %>% dutils::dyplot(ylab = 'Power demand (kW)', fillGraph = T, stackedGraph = T)
sessions_day <- tibble(
time_cycle = ev_model$models$time_cycle,
n_sessions = c(150, 50)
)
sessions_estimated <- simulate_sessions(
new_ev_model,
sessions_day,
charging_powers,
dates_sim,
resolution = 15
)
estimated_demand <- sessions_estimated %>%
get_demand(dttm_seq)
estimated_demand %>%
dutils::dyplot(ylab = 'Power demand (kW)', fillGraph = T, stackedGraph = T)
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F, error = F)
library(evsim)
library(dplyr)
library(lubridate)
library(dutils)
# Required parameters first
ev_model <- evsim::california_ev_model
sessions_day <- tibble(
time_cycle = ev_model$models$time_cycle,
n_sessions = c(10, 10)
)
charging_powers <- tibble(
power = c(3.7, 7.3, 11),
ratio = c(0.2, 0.4, 0.4)
)
# Sessions simulation
set.seed(1234)
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
today(),
resolution = 30
) %>%
mutate(Profile = 'Demand')
sessions %>%
select(-c(Profile)) %>%
mutate_if(is.timepoint, format, "%d/%m/%Y %H:%M") %>%
knitr::kable()
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
today(),
resolution = 30
) %>%
mutate(Profile = 'General profile')
sessions %>%
select(-c(Profile)) %>%
mutate_if(is.timepoint, format, "%d/%m/%Y %H:%M") %>%
knitr::kable()
# Required parameters first
ev_model <- evsim::california_ev_model
sessions_day <- tibble(
time_cycle = ev_model$models$time_cycle,
n_sessions = c(10, 10)
)
charging_powers <- tibble(
power = c(3.7, 7.3, 11),
ratio = c(0.2, 0.4, 0.4)
)
# Sessions simulation
set.seed(1234)
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
today(),
resolution = 30
) %>%
mutate(Profile = 'General profile')
sessions %>%
select(-c(Profile)) %>%
mutate_if(is.timepoint, format, "%d/%m/%Y %H:%M") %>%
knitr::kable()
sessions %>%
select_if(is.timepoint) %>%
mutate_if(is.timepoint, format, "%d/%m/%Y %H:%M") %>%
knitr::kable()
sessions %>%
select_if(is.timepoint) %>%
mutate_all(format, "%d/%m/%Y %H:%M") %>%
knitr::kable()
demand_5 <- sessions %>%
get_demand(resolution = 5)
demand_15 <- sessions %>%
get_demand(resolution = 15)
demand_30 <- sessions %>%
get_demand(resolution = 30)
demand_5 %>%
rename(`5-minute resolution` = `General profile`) %>%
left_join(
rename(demand_15, `15-minute resolution` = `General profile`)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = `General profile`)
) %>%
fill(-datetime, .direction = 'down') %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
demand_5 %>%
rename(`5-minute resolution` = `General profile`) %>%
left_join(
rename(demand_15, `15-minute resolution` = `General profile`)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = `General profile`)
) %>%
tidyr::fill(-datetime, .direction = 'down') %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
sum(demand_5$Demand*5/60) # in kWh
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
today(),
resolution = 30
) %>%
mutate(Profile = 'Users')
demand_5 <- sessions %>%
get_demand(resolution = 5)
demand_15 <- sessions %>%
get_demand(resolution = 15)
demand_30 <- sessions %>%
get_demand(resolution = 30)
demand_5 %>%
rename(`5-minute resolution` = Users) %>%
left_join(
rename(demand_15, `15-minute resolution` = Users)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = Users)
) %>%
tidyr::fill(-datetime, .direction = 'down') %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
# Sessions simulation
set.seed(1234)
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
today(),
resolution = 30
) %>%
mutate(Profile = 'Users')
demand_5 <- sessions %>%
get_demand(resolution = 5)
demand_15 <- sessions %>%
get_demand(resolution = 15)
demand_30 <- sessions %>%
get_demand(resolution = 30)
demand_5 %>%
rename(`5-minute resolution` = Users) %>%
left_join(
rename(demand_15, `15-minute resolution` = Users)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = Users)
) %>%
tidyr::fill(-datetime, .direction = 'down') %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
sum(demand_5$Demand*5/60) # in kWh
sum(demand_5$Users*5/60) # in kWh
sum(demand_15$Users*15/60) # in kWh
sum(demand_30$Users*30/60) # in kWh
demand_comparison <- demand_5 %>%
rename(`5-minute resolution` = Users) %>%
left_join(
rename(demand_15, `15-minute resolution` = Users)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = Users)
)
demand_comparison %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
demand_comparison <- demand_5 %>%
rename(`5-minute resolution` = Users) %>%
left_join(
rename(demand_15, `15-minute resolution` = Users)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = Users)
) %>%
tidyr::fill(-datetime, .direction = 'down')
demand_comparison %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
apste(today())
apste(today())
paste(today())
paste(today(), "00")
ymd_h(paste(today(), "00"))
ymd_h(paste(today(), 22))
ymd_h(paste(today(), 22), tz = ev_model$metadata$tzone)
demand_comparison %>%
filter(datetime >= ymd_h(paste(today(), 22), tz = ev_model$metadata$tzone)) %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
dmy("31/01/2023"),
resolution = 30
) %>%
mutate(Profile = 'Users')
demand_5 <- sessions %>%
get_demand(resolution = 5)
demand_5 <- sessions %>%
get_demand(resolution = 5)
demand_15 <- sessions %>%
get_demand(resolution = 15)
demand_30 <- sessions %>%
get_demand(resolution = 30)
demand_comparison <- demand_5 %>%
rename(`5-minute resolution` = Users) %>%
left_join(
rename(demand_15, `15-minute resolution` = Users)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = Users)
) %>%
tidyr::fill(-datetime, .direction = 'down')
demand_comparison %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
# Sessions simulation
set.seed(123)
sessions <- simulate_sessions(
ev_model,
sessions_day,
charging_powers,
dmy("31/01/2023"),
resolution = 30
) %>%
mutate(Profile = 'Users')
demand_5 <- sessions %>%
get_demand(resolution = 5)
demand_15 <- sessions %>%
get_demand(resolution = 15)
demand_30 <- sessions %>%
get_demand(resolution = 30)
demand_comparison <- demand_5 %>%
rename(`5-minute resolution` = Users) %>%
left_join(
rename(demand_15, `15-minute resolution` = Users)
) %>%
left_join(
rename(demand_30, `30-minute resolution` = Users)
) %>%
tidyr::fill(-datetime, .direction = 'down')
demand_comparison %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
demand_comparison %>%
filter(
datetime >= dmy_h("31/01/2023 22", tz = ev_model$metadata$tzone),
datetime < dmy_h("31/01/2023 22")
) %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
demand_comparison
demand_comparison %>%
filter(
datetime >= dmy_h("31/01/2023 22", tz = ev_model$metadata$tzone),
datetime < dmy_h("31/01/2023 22")
)
demand_comparison %>%
filter(
datetime >= dmy_h("31/01/2023 22", tz = ev_model$metadata$tzone),
datetime < dmy_h("01/02/2023", tz = ev_model$metadata$tzone)
) %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
demand_comparison %>%
filter(
datetime >= dmy_h("31/01/2023 22", tz = ev_model$metadata$tzone),
datetime < dmy_h("01/02/2023", tz = ev_model$metadata$tzone)
)
datetime < dmy_h("01/02/2023", tz = ev_model$metadata$tzone)
dmy_h("01/02/2023", tz = ev_model$metadata$tzone)
dmy("01/02/2023", tz = ev_model$metadata$tzone)
demand_comparison %>%
filter(
datetime >= dmy_h("31/01/2023 22", tz = ev_model$metadata$tzone),
datetime < dmy("01/02/2023", tz = ev_model$metadata$tzone)
) %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
demand_comparison %>%
filter(
datetime >= dmy_h("31/01/2023 16", tz = ev_model$metadata$tzone),
datetime < dmy("01/02/2023", tz = ev_model$metadata$tzone)
) %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
demand_comparison %>%
filter(
datetime >= dmy_h("31/01/2023 16", tz = ev_model$metadata$tzone),
datetime < dmy_h("31/01/2023 19", tz = ev_model$metadata$tzone)
) %>%
dyplot(stepPlot = T, strokeWidth = 2, ylab = 'Power (kW)')
pkgdown::build_site()
paste("", 1)
paste0("", 1)
paste0("", 1, sep="CHS")
paste0("a", 1, sep="CHS")
paste("a", 1, sep="CHS")
paste("", 1, sep="CHS")
